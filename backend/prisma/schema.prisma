// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String
  reviews      Review[]
}

model Tag {
  id           Int      @id @default(autoincrement())
  name         String   @unique

  candidates Candidate[]
}

model Candidate {
  id           Int      @id @default(autoincrement())
  uuid         String   @unique // UUID esterno dal bot
  sender       String   // Numero di telefono del candidato
  status       String   @default("pending") // pending, reviewed, rejected
  
  // Dati parsati per un accesso rapido
  fullName     String
  email        String
  githubLink   String?
  
  // Dati grezzi per completezza
  rawAnswers   Json
  
  reviews      Review[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  tags Tag[]
}

model Review {
  id          Int      @id @default(autoincrement())
  phase       Int      // 1 o 2
  
  // --- Campi Fase 1 ---
  criteriaRatings Json?
  notes           String?  @db.Text

  // --- Campi Fase 2 ---
  finalScore      Float?   // Punteggio complessivo
  hireDecision    Boolean? // true = Assumere, false = Non assumere
  finalComment    String?  @db.Text
  
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  candidateId Int
  
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  
  createdAt   DateTime @default(now())

  @@unique([candidateId, userId, phase])
}